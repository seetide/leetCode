/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode(int x) { val = x; }
 * }
 */
 
 // good version from 
class Solution {
    public ListNode addTwoNumbers(ListNode l1, ListNode l2) {
        
       ListNode dummyHead = new ListNode(0);
       ListNode p = l1, q = l2, curr = dummyHead;
        
        int carry = 0;
        
        while(p != null || q != null) {
        
            // This is a very elegant way to solve the length of two different List
            int x = p != null ? p.val : 0;
            int y = q != null ? q.val : 0;
            
            int sum = x + y + carry;
            
            curr.next = new ListNode(sum % 10);
            curr = curr.next;
            
            // this is a elegant way of update the value of carry
            carry = sum / 10;            
            
            
            if(p != null) p = p.next;
            if(q != null) q = q.next;
        }
        
        if(carry > 0) {
            curr.next = new ListNode(carry);
        }
         
 
        return dummyHead.next;
    }
    
    
    
}

// my old version.
class Solution {
    public ListNode addTwoNumbers(ListNode l1, ListNode l2) {
        
        if(l1 == null) return l2;
        if(l2 == null) return l1;
        
        ListNode dummy = new ListNode(0);
        ListNode temp = dummy;
        
        
        int carry = 0;
        
        while ( l1 != null && l2 != null ) {
            int value = l1.val + l2.val + carry; 
            int num = value % 10;
            if(value > 9) carry = 1;
            else carry = 0;
            
            temp.next = new ListNode(num);
                       
            temp= temp.next;
            
            l1 = l1.next;
            l2 = l2.next;            
        } 
        
            while(l1 != null){
                int value = l1.val + carry; 
            int num = value % 10;
            if(value > 9) carry = 1;
            else carry = 0;
            
            temp.next = new ListNode(num);
                       
            temp= temp.next;
            
            l1 = l1.next;
            }
        
        while(l2 != null){
                int value = l2.val + carry; 
            int num = value % 10;
            if(value > 9) carry = 1;
            else carry = 0;
            
            temp.next = new ListNode(num);
                       
            temp= temp.next;
            
            l2 = l2.next;
            }
        
        if(carry == 1) {
            temp.next = new ListNode(1);
        }
        
        return dummy.next;
         
 
        
    }

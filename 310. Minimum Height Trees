class Solution {
    public List<Integer> findMinHeightTrees(int n, int[][] edges) {
       
        if(n == 1) return Collections.singletonList(0);
        
        List<Set<Integer>> adj = new ArrayList<>();
        
        for(int i = 0; i < n; i++) adj.add(new HashSet<Integer>());
        
        for(int[] edge : edges){
            adj.get(edge[0]).add(edge[1]);
            adj.get(edge[1]).add(edge[0]);
        }
        
        List<Integer> leaves = new ArrayList<>();
        
        for(int i = 0; i < n; i++){
            if(adj.get(i).size() == 1) leaves.add(i);
        }
        
        while(n > 2){
            n = n - leaves.size();
            
            List<Integer> newLeaves = new ArrayList<>();
            
            for(int x : leaves){
                int y = adj.get(x).iterator().next();
                adj.get(y).remove(x);
                
                if(adj.get(y).size() == 1) newLeaves.add(y);
            }
            
            leaves = newLeaves;
        }
        
       return leaves;
    }
}

// scan  1ms
class Solution {
    public int findMin(int[] nums) {
        for(int i = 0; i < nums.length - 1; i++){
            if(nums[i] > nums[i + 1]){
                return nums[i + 1];
            }
        }
        
        return nums[0];
    }
}

// binary   2ms  find min without sort.
class Solution {
    public int findMin(int[] nums) {
        return helper(nums, 0, nums.length - 1);
    }
    
    public int helper(int[] nums, int lo, int hi){
        
        if(lo == hi)   return nums[lo]; 
        if(lo+1 == hi) return Math.min(nums[lo], nums[hi]);
        
        
        
        int mid = (hi - lo)/2 + lo;
        
        if(nums[mid] > nums[mid+1]) return nums[mid+1];
        if(nums[mid-1] > nums[mid]) return nums[mid];
        
        int left = helper(nums, lo, mid - 1);
        int right = helper(nums, mid + 1, hi);
        return Math.min( left, right );
        
    }
}
